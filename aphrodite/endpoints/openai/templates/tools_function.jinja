{%- set func_call_token = "!function_call:" -%} {#- The special prefix to functions calls, be aware of extra space or new lines ! -#}

{%- if CONTEXT == CALL_TOKEN -%} {#- return only the func_call_token value. Needed by the implementation. No data included -#}
    {{- func_call_token -}}
{%- endif -%} {#- CONTEXT == CALL_TOKEN -#}

{%- if CONTEXT == CALLS_NOTIF -%} {#- Format the notification of the function call. Data: tool_calls = ChatCompletionMessageToolCall -#}
    {%- for call in tool_calls -%}
    {%- if call.function.arguments == None or call.function.arguments|count == 0 -%}
    {{- call.id }} was called with no argument
    {%- else -%}
    {{- call.id }} was called with arguments : {{- call.function.arguments -}}
    {%- endif -%}
    {%- raw %}
{% endraw -%}
    {%- endfor -%}
{%- endif -%} {#- CONTEXT == CALLS_NOTIF -#}

{%- if CONTEXT == TOOL_RESPONSE -%} {#- Format of the response of the function call. Data: message = ChatCompletionToolMessage -#}
    {{- message.content -}}
{%- endif -%} {#- CONTEXT == TOOL_RESPONSE -#}

{%- if CONTEXT == FORCE_CALL -%} {#- One tool call defined request. Data: tool = ChatCompletionToolParam -#}
You must call the following function at least one time to answer the question. You may call it multiple times if needed:
        {%- if tool.function.parameters == None or tool.function.parameters|count == 0 -%}  {#- without parameter #}
  {'name': "{{tool.function.name}}", 'description': "{{tool.function.description}}", 'arguments': null},
        {%- else -%} {#- with parameters #}
  {'name': "{{tool.function.name}}", 'description': "{{tool.function.description}}", 'arguments': { {{tool.function.parameters}} {{ '}}' }},
        {%- endif %}  {#- tool.function.parameters #}
{%- endif -%} {#- CONTEXT == FORCE_CALL -#}

{%- if CONTEXT == FUNCTIONS_LIST -%} {#- Functions list generation Data: tools_list = List[ChatCompletionToolParam] -#}
    {%- raw -%}The following is a list of external functions that may be called to complete certain tasks:
[
    {%- endraw -%}
    {%- for tool in tools_list -%}
    {%- if tool.function.parameters == None or tool.function.parameters|count == 0 -%}  {#- without parameter #}
  {'name': "{{tool.function.name}}", 'description': "{{tool.function.description}}", 'arguments': null},
    {%- else -%} {#- with parameters #}
  {'name': "{{tool.function.name}}", 'description': "{{tool.function.description}}", 'arguments': { {{tool.function.parameters}} {{ '}}' }},
  {% endif -%}  {#- tool.function.parameters #}
    {%- endfor -%}
    {%- raw %}
]
End of list

* Whenever the user asks you something, you can either respond directly or invoke a function if it is present in the previous list.
* The decision to invoke a function is yours, only invoke a function if it is necessary to answer the user's question
* If you need to call at least one function, your message should contain only a list of function calls and nothing else; the function calls are the response.
    {%- endraw %}
{%- endif -%} {#- CONTEXT == FUNCTIONS_LIST -#}

{%- if CONTEXT == FORCE_CALL or CONTEXT == FUNCTIONS_LIST -%}
To call a function, the message must start by "{{func_call_token}}" followed by a json like this:
* With arguments:
{{func_call_token}}{"call": "function_name", "arguments": {"arg1": "value1"}}
* Without arguments:
{{func_call_token}}{"call": "function_name", "arguments": null}
End of functions instructions
{%- endif -%} {#- CONTEXT == FORCE_CALL or CONTEXT == FUNCTIONS_LIST -#}