# This Aphrodite Dockerfile is used to construct image that can build and run Aphrodite on x86 CPU platform.

FROM ubuntu:22.04 AS cpu-test-1

RUN apt-get update -y \
    && apt-get install -y curl git wget vim numactl gcc-12 g++-12 python3 python3-pip libtcmalloc-minimal4 libnuma-dev \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 10 --slave /usr/bin/g++ g++ /usr/bin/g++-12

# https://intel.github.io/intel-extension-for-pytorch/cpu/latest/tutorials/performance_tuning/tuning_guide.html
# intel-openmp provides additional performance improvement vs. openmp
# tcmalloc provides better memory allocation efficiency, e.g, holding memory in caches to speed up access of commonly-used objects.
RUN pip install intel-openmp

ENV LD_PRELOAD="/usr/lib/x86_64-linux-gnu/libtcmalloc_minimal.so.4:/usr/local/lib/libiomp5.so"

RUN echo 'ulimit -c 0' >> ~/.bashrc

RUN pip install https://intel-extension-for-pytorch.s3.amazonaws.com/ipex_dev/cpu/intel_extension_for_pytorch-2.4.0%2Bgitfbaa4bc-cp310-cp310-linux_x86_64.whl

RUN pip install --upgrade pip \
    && pip install wheel packaging ninja "setuptools>=49.4.0" numpy

FROM cpu-test-1 AS build

COPY ./ /workspace/aphrodite-engine

WORKDIR /workspace/aphrodite-engine

RUN pip install -v -r requirements-cpu.txt --extra-index-url https://download.pytorch.org/whl/cpu

# Support for building with non-AVX512 Aphrodite: docker build --build-arg APHRODITE_CPU_DISABLE_AVX512="true" ...
ARG APHRODITE_CPU_DISABLE_AVX512
ENV APHRODITE_CPU_DISABLE_AVX512=${APHRODITE_CPU_DISABLE_AVX512}

RUN APHRODITE_TARGET_DEVICE=cpu python3 setup.py install
RUN pip install triton

WORKDIR /workspace/

RUN ln -s /workspace/aphrodite-engine/examples && ln -s /workspace/aphrodite-engine/tests/benchmarks

ENTRYPOINT ["python3", "-m", "aphrodite.endpoints.openai.api_server"]